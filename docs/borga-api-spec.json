{
  "openapi": "3.0.1",
  "info": {
    "title": "BORGA",
    "description": "Manage your game collection.",
    "termsOfService": "http://swagger.io/terms/",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Users",
      "description": "User creation"
    },
    {
      "name": "AllGames",
      "description": "All the games that we know about.",
      "externalDocs": {
        "description": "Based on",
        "url": "https://www.boardgameatlas.com/"
      }
    },
    {
      "name": "MyGroups",
      "description": "The personal groups of games"
    },
    {
      "name": "MyGames",
      "description": "The personal games collection"
    }
  ],
  "paths": {
    "/api/users/new": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a user",
        "description": "Creates a user and a token",
        "requestBody": {
          "description": "User credentials to be used",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCred"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A user has been created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppError"
                }
              }
            }
          }
        }
      }
    },
    "/api/global/games": {
      "get": {
        "tags": [
          "AllGames"
        ],
        "summary": "Find a game by query",
        "description": "Uses Board Game Atlas API to find a game corresponding to the query. Valid queries are the same as specified for Game Board Atlas API. It will return a list of games with a matching name or a list of the most popular games if the query is empty.",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Query to find a game",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Games have been found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameArrayResponse"
                }
              }
            }
          },
          "404": {
            "description": "No game found for the query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppError"
                }
              }
            }
          },
          "502": {
            "description": "Game Board Atlas API is not responding",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppError"
                }
              }
            }
          }
        }
      }
    },
    "/api/global/games/{gameId}": {
      "get": {
        "tags": [
          "AllGames"
        ],
        "summary": "Get a game's information",
        "description": "Uses Board Game Atlas API to show the information on the requested game.",
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "The game's id",
            "required": true,
            "example": "74f9mzbw9Y",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Game has been found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid gameId",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppError"
                }
              }
            }
          },
          "404": {
            "description": "No game found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppError"
                }
              }
            }
          },
          "502": {
            "description": "Game Board Atlas API is not responding",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppError"
                }
              }
            }
          }
        }
      }
    },
    "/api/my/groups": {
      "get": {
        "tags": [
          "MyGroups"
        ],
        "summary": "List all groups in the personal collection",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "The personal list of groups",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing API token. The user is not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MyGroups"
        ],
        "summary": "Add a group to the personal collection",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Properties of the group to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The group was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupAddedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppError"
                }
              }
            }
          },
          "401": {
            "description": "Missing API token. The user is not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MyGroups"
        ],
        "summary": "Edit a group in the personal collection",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "The group's new properties",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The group was edited",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupEditedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppError"
                }
              }
            }
          },
          "401": {
            "description": "Missing API token. The user is not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppError"
                }
              }
            }
          },
          "404": {
            "description": "Group not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppError"
                }
              }
            }
          }
        }
      }
    },
    "/api/my/groups/{groupId}": {
      "delete": {
        "tags": [
          "MyGroups"
        ],
        "summary": "Delete a group in the personal collection",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "ID of group to get the information from",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "zxgOaClm"
          }
        ],
        "responses": {
          "200": {
            "description": "The group was deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupDeletedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppError"
                }
              }
            }
          },
          "401": {
            "description": "Missing API token. The user is not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppError"
                }
              }
            }
          },
          "404": {
            "description": "Group not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppError"
                }
              }
            }
          }
        }
      }
    },
    "/api/my/groups/{groupId}/info": {
      "get": {
        "tags": [
          "MyGroups"
        ],
        "summary": "List all information of the requested group",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "ID of group to get the information from",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "zxgOaClm"
          }
        ],
        "responses": {
          "200": {
            "description": "The information of the requested group",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppError"
                }
              }
            }
          },
          "401": {
            "description": "Missing API token. The user is not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppError"
                }
              }
            }
          },
          "404": {
            "description": "Group not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppError"
                }
              }
            }
          }
        }
      }
    },
    "/api/my/groups/{groupId}/{gameId}": {
      "post": {
        "tags": [
          "MyGames"
        ],
        "summary": "Add a game to a group by ID",
        "description": "Adds a game from a group",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "ID of group",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "zxgOaClm"
          },
          {
            "name": "gameId",
            "in": "path",
            "description": "ID of game",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "74f9mzbw9Y"
          }
        ],
        "responses": {
          "200": {
            "description": "Game added",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameAddedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppError"
                }
              }
            }
          },
          "401": {
            "description": "Missing API token. The user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppError"
                }
              }
            }
          },
          "404": {
            "description": "Group or game not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppError"
                }
              }
            }
          },
          "502": {
            "description": "Game Board Atlas API is not responding",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MyGames"
        ],
        "summary": "Delete a game from a group by ID",
        "description": "Deletes a game from a group",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "ID of group",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "zxgOaClm"
          },
          {
            "name": "gameId",
            "in": "path",
            "description": "ID of game",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "74f9mzbw9Y"
          }
        ],
        "responses": {
          "200": {
            "description": "Game deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameRemovedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppError"
                }
              }
            }
          },
          "401": {
            "description": "Missing API token. The user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppError"
                }
              }
            }
          },
          "404": {
            "description": "Group or game not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "AppErrorInfo": {
        "description": "Additional information about the error",
        "nullable": true,
        "anyOf": [
          {
            "type": "object"
          },
          {
            "type": "string"
          },
          {
            "type": "integer"
          },
          {
            "type": "number"
          }
        ],
        "example": "..."
      },
      "AppError": {
        "type": "object",
        "description": "Application error",
        "required": [
          "code",
          "name",
          "message"
        ],
        "properties": {
          "code": {
            "type": "number",
            "format": "int32",
            "description": "Internal error code",
            "example": 2000
          },
          "name": {
            "type": "string",
            "description": "Internal error name",
            "example": "FAIL"
          },
          "message": {
            "type": "string",
            "description": "Error description message",
            "example": "An error occurred"
          },
          "info": {
            "$ref": "#/components/schemas/AppErrorInfo"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "description": "User created successfully",
        "required": [
          "code",
          "name",
          "message",
          "info"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "example": 1007
          },
          "name": {
            "type": "string",
            "example": "USER_ADDED"
          },
          "message": {
            "type": "string",
            "example": "User added successfully"
          },
          "info": {
            "type": "string",
            "example": "Username UltimateGamer added with token 9772f196-f6f6-45d9-8a9c-affede42a451"
          }
        }
      },
      "GroupAddedResponse": {
        "type": "object",
        "description": "Group added successfully",
        "required": [
          "code",
          "name",
          "message",
          "info"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "example": 1002
          },
          "name": {
            "type": "string",
            "example": "GROUP_CREATED"
          },
          "message": {
            "type": "string",
            "example": "Group created successfully"
          },
          "info": {
            "type": "string",
            "example": "Group Friday Night Games created"
          }
        }
      },
      "GroupResponse": {
        "type": "object",
        "description": "Requested group",
        "required": [
          "name",
          "description",
          "games"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "Friday Night Games"
          },
          "description": {
            "type": "string",
            "example": "Games to play on a friday night"
          },
          "games": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "74f9mzbw9Y"
            ]
          }
        }
      },
      "GroupEditedResponse": {
        "type": "object",
        "description": "Group edited successfully",
        "required": [
          "code",
          "name",
          "message",
          "info"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "example": 1004
          },
          "name": {
            "type": "string",
            "example": "GROUP_MODIFIED"
          },
          "message": {
            "type": "string",
            "example": "Group modified successfully"
          },
          "info": {
            "type": "string",
            "example": "Group Name: New Name | Group Description: New Description"
          }
        }
      },
      "GroupDeletedResponse": {
        "type": "object",
        "description": "Group deleted successfully",
        "required": [
          "code",
          "name",
          "message",
          "info"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "example": 1003
          },
          "name": {
            "type": "string",
            "example": "GROUP_DELETED"
          },
          "message": {
            "type": "string",
            "example": "Group deleted successfully"
          },
          "info": {
            "type": "string",
            "example": "Group Friday Night Games deleted"
          }
        }
      },
      "GameArrayResponse": {
        "type": "array",
        "description": "Response with games",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "WVgc4bUL8N"
            },
            "name": {
              "type": "string",
              "example": "Clue"
            },
            "price": {
              "type": "string",
              "example": 7.45
            }
          }
        }
      },
      "GameRemovedResponse": {
        "type": "object",
        "description": "Game removed successfully",
        "required": [
          "code",
          "name",
          "message",
          "info"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "example": 1006
          },
          "name": {
            "type": "string",
            "example": "GAME_REMOVED"
          },
          "message": {
            "type": "string",
            "example": "Game removed from group successfully"
          },
          "info": {
            "type": "string",
            "example": "Game removed from group Friday Night Games"
          }
        }
      },
      "GameAddedResponse": {
        "type": "object",
        "description": "Game added successfully",
        "required": [
          "code",
          "name",
          "message",
          "info"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "example": 1005
          },
          "name": {
            "type": "string",
            "example": "GAME_ADDED"
          },
          "message": {
            "type": "string",
            "example": "Game added to group successfully"
          },
          "info": {
            "type": "string",
            "example": "Exploding Kittens added to Friday Night Games"
          }
        }
      },
      "GameResponse": {
        "type": "object",
        "description": "Object containing the information on the requested game",
        "properties": {
          "id": {
            "type": "string",
            "example": "74f9mzbw9Y"
          },
          "name": {
            "type": "string",
            "example": "Exploding Kittens"
          },
          "price": {
            "type": "number",
            "example": 15.94
          },
          "discount": {
            "type": "number",
            "example": 0.2
          },
          "minimum_players": {
            "type": "integer",
            "example": 2
          },
          "maximum_players": {
            "type": "integer",
            "example": 5
          },
          "minimum_age": {
            "type": "integer",
            "example": 7
          },
          "description": {
            "type": "string",
            "example": "<p><strong>Exploding Kittens</strong> is a card game for people who are into kittens and explosions and laser beams and sometimes goats.</p>\\r\\n<p>In this highly-strategic, kitty-powered version of Russian roulette, players draw cards until someone draws an exploding kitten, at which point they explode, they are Dead, and they are out of the game -- unless that player has a defuse card, which can defuse the kitten using things like laser pointers, belly rubs, and catnip sandwiches. All of the other cards in the deck are used to move, mitigate, or avoid the exploding kittens.</p>"
          },
          "image": {
            "type": "string",
            "example": "https://s3-us-west-1.amazonaws.com/5cc.images/games/uploaded/1559257206847-51osODpsNIL.jpg"
          },
          "url": {
            "type": "string",
            "example": "https://www.boardgameatlas.com/game/74f9mzbw9Y/exploding-kittens-card-game"
          },
          "mechanics": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Hand Management",
              "Player Elimination",
              "Press Your Luck"
            ]
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Animals",
              "Humor",
              "Kickstarter"
            ]
          }
        }
      },
      "UserCred": {
        "type": "object",
        "description": "Username to be used",
        "required": [
          "username",
          "password"
        ],
        "properties": {
          "username": {
            "type": "string",
            "description": "Username to be used",
            "example": "UltimateGamer"
          },
          "password": {
            "type": "string",
            "description": "Password to be used",
            "example": "UltimatePassword"
          }
        }
      },
      "Group": {
        "type": "object",
        "description": "Properties of the new group",
        "required": [
          "name",
          "description"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Group name",
            "example": "Friday Night Games"
          },
          "description": {
            "type": "string",
            "description": "Group description",
            "example": "Games to play on a friday night"
          }
        }
      },
      "GroupListResponse": {
        "type": "object",
        "description": "All groups in the personal collection",
        "example": {
          "9VmVkqyB": {
            "name": "Friday Night Games",
            "description": "Games to play on a friday night",
            "games": [
              "74f9mzbw9Y"
            ]
          }
        }
      },
      "EditGroup": {
        "type": "object",
        "description": "Group's new properties",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Group ID",
            "example": "g7h6xJLA"
          },
          "name": {
            "type": "string",
            "description": "Group name",
            "example": "Friday Night Games"
          },
          "description": {
            "type": "string",
            "description": "Group description",
            "example": "Games to play on a friday night"
          }
        }
      }
    }
  }
}